---

- hosts: all
  become: yes

  vars:
    # Note: Keeping docker packages separate just for organization
    docker_package_names: [docker-ce, docker-ce-cli, containerd.io, docker-compose-plugin, docker-buildx-plugin]
    yum_packages: [yum-utils, git, device-mapper-persistent-data, lvm2, make]

  tasks:
    - name: Add ec2-user to sudoers
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        line: "ec2-user ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"

    - name: Install yum packages
      yum:
        name: "{{item}}"
        state: present
        update_cache: yes
      with_items: "{{ yum_packages }}"
    
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add docker repository to yum
      command: sudo yum-config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
      when: ansible_distribution=="Red Hat Enterprise Linux"

    # https://stackoverflow.com/questions/70358656/rhel8-fedora-yum-dns-causes-cannot-download-repodata-repomd-xml-for-docker-ce
    - name: Fix the docker-ce.repo file
      command: sed -i -e 's/baseurl=https:\/\/download\.docker\.com\/linux\/\(fedora\|rhel\)\/$releasever/baseurl\=https:\/\/download.docker.com\/linux\/centos\/$releasever/g' /etc/yum.repos.d/docker-ce.repo
      when: ansible_distribution=="Red Hat Enterprise Linux"

    - name: Install Required Docker Packages for RHEL
      yum:
        name: "{{item}}"
        state: present
      with_items: "{{ docker_package_names }}"
      when: ansible_distribution=="Red Hat Enterprise Linux"

    - name: Install Required Docker Packages for Amazon Linux
      yum:
        name: docker
        state: present
      when: ansible_distribution!="Red Hat Enterprise Linux"
      
    - name: Start Docker Service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes
        state: present

    - name: Clean dangling images
      shell: docker image prune -f

    - set_fact: collector_version="{{ lookup('env','COLLECTOR_VERSION') }}"

    - name: Clone the collector repo
      become: no
      ansible.builtin.git:
        repo: 'https://github.com/redhat-best-practices-for-k8s/collector.git'
        version: '{{collector_version}}'
        dest: /home/ec2-user/collector
        clone: yes
        force: true

    - name: Start Collector container 
      shell: |
        cd collector
        GIT_SSH_COMMAND='ssh -i /home/ec2-user/.ssh/id_rsa_git -o IdentitiesOnly=yes'\
          COLLECTOR_VERSION={{ lookup('env', 'COLLECTOR_VERSION') }} make run-collector-rds

    - name: Start Grafana container 
      shell: |
        cd collector
        GIT_SSH_COMMAND='ssh -i /home/ec2-user/.ssh/id_rsa_git -o IdentitiesOnly=yes' make run-grafana
