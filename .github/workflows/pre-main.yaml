name: Test Incoming Changes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
env:
  COLLECTOR_CONTAINER_NAME: tnf-collector
  REGISTRY: quay.io
  COLLECTOR_IMAGE_NAME: testnetworkfunction/collector
  COLLECTOR_IMAGE_TAG: latest


jobs:
  lint:
    name: Run Linter and Vet
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]
    env:
      SHELL: /bin/bash
      CM_BIN: /usr/local/bin/checkmake
      CM_URL_LINUX: https://github.com/mrtazz/checkmake/releases/download/0.2.2/checkmake-0.2.2.linux.amd64 # yamllint disable-line

    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.0

      - name: Disable default go problem matcher
        run: echo "::remove-matcher owner=go::"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      # TODO: golangci-lint team recommends using a GitHub Action to perform golangci-lint responsibilities.  However
      # there does not appear to be a way to honor our existing .golangci.yml.  For now, mimic developer behavior.
      - name: Install golangci-lint
        run: make install-lint

      - name: Install checkmake (Linux)
        run: curl --location --output $CM_BIN --silent $CM_URL_LINUX
        if: runner.os == 'Linux'

      - name: Install checkmake (MacOS)
        run: brew install checkmake
        if: runner.os == 'macOS'

      - run: chmod +x $CM_BIN

      - name: Install hadolint (Linux)
        run: |
          curl \
              --location \
              --output /usr/local/bin/hadolint \
              https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x /usr/local/bin/hadolint
        if: runner.os == 'Linux'

      - name: Install hadolint (MacOS)
        run: |
          brew install hadolint
        if: runner.os == 'macOS'

      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_data: |
            extends: default
            rules:
              line-length:
                level: warning
              trailing-spaces:
                level: warning
              brackets:
                level: warning
              empty-lines:
                level: warning

      - name: make lint
        run: make lint

      - name: make vet
        run: make vet

  build-and-push-image:
    name: "Build and Push Image"
    runs-on: ubuntu-22.04
    steps:

      - name: Check out the code
        uses: actions/checkout@v4
        
      - name: Build the image
        run: make build-image-local

      # Push the new unstable TNF image to Quay.io.
      - name: (if on main and upstream) Authenticate against Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'test-network-function' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          # Use a Robot Account to authenticate against Quay.io
          # https://docs.quay.io/glossary/robot-accounts.html
          username: ${{ secrets.QUAY_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: (if on main and upstream) Push the newly built image to Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'test-network-function' }}
        run: docker push --all-tags ${REGISTRY}/${COLLECTOR_IMAGE_NAME}
