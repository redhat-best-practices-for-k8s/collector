---
name: Test Incoming Changes

'on':
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  COLLECTOR_CONTAINER_NAME: tnf-collector
  REGISTRY: quay.io
  COLLECTOR_IMAGE_NAME: redhat-best-practices-for-k8s/collector
  COLLECTOR_IMAGE_TAG: unstable
  COLLECTOR_IMAGE_NAME_LEGACY: testnetworkfunction/collector
jobs:
  lint:
    name: Run Linter and Vet
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    env:
      SHELL: /bin/bash
      CM_BIN: /usr/local/bin/checkmake
      CM_URL_LINUX: https://github.com/mrtazz/checkmake/releases/download/0.2.2/checkmake-0.2.2.linux.amd64 # yamllint disable-line

    steps:
      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Disable default go problem matcher
        run: echo "::remove-matcher owner=go::"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Extract dependent Pull Requests
        uses: depends-on/depends-on-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install checkmake
        run: |
          curl --location --output $CM_BIN --silent $CM_URL_LINUX
          chmod +x $CM_BIN

      - name: Install Shfmt
        uses: mfinelli/setup-shfmt@v3

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          args: --timeout 10m0s

      - name: Checkmake
        run: checkmake --config=.checkmake Makefile
        if: runner.os == 'Linux'

      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          recursive: true
        if: runner.os == 'Linux'

      - name: Shfmt
        run: shfmt -d scripts/*.sh

      - name: Markdownlint
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: .
        if: runner.os == 'Linux'

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master

      # Temporarily disabled due to issues with the action
      # - name: Typos
      #   uses: crate-ci/typos@master
      #   if: runner.os == 'Linux'

      - name: Yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yml
          file_or_dir: .github/*.yml .github/workflows/*.yaml .yamllint.yml
          strict: true

      - name: make vet
        run: make vet

  build-and-push-image:
    name: "Build and Push Image"
    runs-on: ubuntu-22.04
    steps:

      - name: Check out the code
        uses: actions/checkout@v4

      # Build Collector image with unstable tag
      - name: Build the image
        run: make build-image-collector
        env:
          COLLECTOR_IMAGE_TAG: ${{ env.COLLECTOR_IMAGE_TAG }}

      # Push the new unstable TNF image to Quay.io.
      - name: (if on main and upstream) Authenticate against Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          # Use a Robot Account to authenticate against Quay.io
          # https://docs.quay.io/glossary/robot-accounts.html
          username: ${{ secrets.QUAY_ROBOT_USERNAME_K8S }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN_K8S }}

      - name: (if on main and upstream) Push the newly built image to Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        run: docker push --all-tags ${REGISTRY}/${COLLECTOR_IMAGE_NAME}

      - uses: webfactory/ssh-agent@v0.9.0
        name: (if on main and upstream) Add SSH key to agent
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        with:
          ssh-private-key: ${{ secrets.COLLECTOR_KEYPAIR }}

  build-and-push-image-legacy:
    name: "Build and Push Image (Legacy)"
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      # Build Collector image with unstable tag
      - name: Build the image
        run: make build-image-collector
        env:
          COLLECTOR_IMAGE_TAG: ${{ env.COLLECTOR_IMAGE_TAG }}

      # Push the new unstable TNF image to Quay.io.
      - name: (if on main and upstream) Authenticate against Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          # Use a Robot Account to authenticate against Quay.io
          # https://docs.quay.io/glossary/robot-accounts.html
          username: ${{ secrets.QUAY_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: (if on main and upstream) Push the newly built image to Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        run: docker push --all-tags ${REGISTRY}/${COLLECTOR_IMAGE_NAME_LEGACY}

      - uses: webfactory/ssh-agent@v0.9.0
        name: (if on main and upstream) Add SSH key to agent
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        with:
          ssh-private-key: ${{ secrets.COLLECTOR_KEYPAIR }}
